name: Fetch ClickUp Task Lists

on:
  pull_request:
    types: [opened, reopened, edited]

jobs:
  fetch-clickup-lists:
    runs-on: ubuntu-latest
    steps:
      - name: Extract ClickUp Task ID
        id: extract_id
        run: |
          PR_TITLE="${{ github.event.pull_request.title }}"
          TASK_ID=$(echo $PR_TITLE | grep -oP '\[TICKET-\K\d+(?=\])')
          echo "TASK_ID=$TASK_ID" >> $GITHUB_OUTPUT

      - name: Fetch ClickUp Task Lists
        if: steps.extract_id.outputs.TASK_ID
        env:
          CLICKUP_API_TOKEN: ${{ secrets.CLICKUP_API_TOKEN }}
          TASK_ID: ${{ steps.extract_id.outputs.TASK_ID }}
        run: |
          RESPONSE=$(curl -s -H "Authorization: $CLICKUP_API_TOKEN" \
            "https://api.clickup.com/api/v2/task/$TASK_ID")
          
          LIST_NAMES=$(echo $RESPONSE | jq -r '.list.name')
          FOLDER_NAME=$(echo $RESPONSE | jq -r '.folder.name // "No folder"')
          SPACE_NAME=$(echo $RESPONSE | jq -r '.space.name')
          
          echo "Task belongs to the following lists:"
          echo "Space: $SPACE_NAME"
          echo "Folder: $FOLDER_NAME"
          echo "List: $LIST_NAMES"

      - name: Comment PR
        if: steps.extract_id.outputs.TASK_ID
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const spaceNameOutput = process.env.SPACE_NAME;
            const folderNameOutput = process.env.FOLDER_NAME;
            const listNamesOutput = process.env.LIST_NAMES;
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `This PR is associated with a ClickUp task in the following lists:\n\nSpace: ${spaceNameOutput}\nFolder: ${folderNameOutput}\nList: ${listNamesOutput}`
            })
